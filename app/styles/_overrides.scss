// Need to import these to have the Elastic UI variables
@import '../../node_modules/@elastic/eui/src/themes/eui/eui_globals';
@import '../../node_modules/@elastic/eui/src/components/tool_tip/index';
@import '../../node_modules/@elastic/eui/src/components/panel/index';
@import '../../node_modules/@elastic/eui/src/components/popover/index';

// Override some EuiTooltip class values
// to avoid conflicts with EmberTooltip
.ember-tooltip {
  @extend .euiToolTip;
  animation: none;
  opacity: initial;
  background-color: $euiTooltipBackgroundColor;
}

.euiToolTip-arrow {
  @extend .euiToolTip__arrow;
  transform: rotate(45deg) !important;
  border: 0;
}

.ember-popover {
  @extend .euiPanel;
  background-color: $euiColorEmptyShade;
  color: inherit;
  padding: 0;
  border: none;
}

.ember-popover-arrow {
  border: none;
  z-index: 1;
  // top: initial !important;

  &:before, &:after {
    position: absolute;
    content: '';
    height: 0;
    width: 0;
  }
}

.ember-popover[x-placement^="top"] .ember-popover-arrow {
  // left: calc(50% - 16px) !important;
  bottom: 0 !important;
}

.ember-popover[x-placement^="bottom"] .ember-popover-arrow {
  top: 0 !important;
}

.ember-popover[x-placement^="right"] .ember-popover-arrow {
  left: 0 !important;
}

.ember-popover[x-placement^="left"] .ember-popover-arrow {
  right: 0 !important;
}

.ember-popover[x-placement^="top"] .ember-popover-arrow {
  &:before {
    bottom: -$euiPopoverArrowSize + 2;
    border-left: $euiPopoverArrowSize solid transparent;
    border-right: $euiPopoverArrowSize solid transparent;
    border-top: $euiPopoverArrowSize solid $euiBorderColor;
  }

  &:after {
    bottom: -$euiPopoverArrowSize + 3;
    border-left: $euiPopoverArrowSize solid transparent;
    border-right: $euiPopoverArrowSize solid transparent;
    border-top: $euiPopoverArrowSize solid $euiColorEmptyShade;
  }
}

.ember-popover[x-placement^="bottom"] .ember-popover-arrow {
  &:before {
    top: -$euiPopoverArrowSize;
    border-left: $euiPopoverArrowSize solid transparent;
    border-right: $euiPopoverArrowSize solid transparent;
    border-bottom: $euiPopoverArrowSize solid $euiBorderColor;
  }

  &:after {
    top: -$euiPopoverArrowSize + 1;
    border-left: $euiPopoverArrowSize solid transparent;
    border-right: $euiPopoverArrowSize solid transparent;
    border-bottom: $euiPopoverArrowSize solid $euiColorEmptyShade;
  }
}

.ember-popover[x-placement^="right"] .ember-popover-arrow {
  &:before {
    left: -$euiPopoverArrowSize;
    top: 50%;
    border-top: $euiPopoverArrowSize solid transparent;
    border-bottom: $euiPopoverArrowSize solid transparent;
    border-right: $euiPopoverArrowSize solid $euiBorderColor;
  }

  &:after {
    left: -$euiPopoverArrowSize + 1;
    top: 50%;
    border-top: $euiPopoverArrowSize solid transparent;
    border-bottom: $euiPopoverArrowSize solid transparent;
    border-right: $euiPopoverArrowSize solid $euiColorEmptyShade;
  }
}

.ember-popover[x-placement^="left"] .ember-popover-arrow {
  &:before {
    right: -$euiPopoverArrowSize + 1;
    top: 50%;
    border-top: $euiPopoverArrowSize solid transparent;
    border-bottom: $euiPopoverArrowSize solid transparent;
    border-left: $euiPopoverArrowSize solid $euiBorderColor;
  }

  &:after {
    right: -$euiPopoverArrowSize + 2;
    top: 50%;
    border-top: $euiPopoverArrowSize solid transparent;
    border-bottom: $euiPopoverArrowSize solid transparent;
    border-left: $euiPopoverArrowSize solid $euiColorEmptyShade;
  }
}

.euiPopover__panel {
  position: static;
}
